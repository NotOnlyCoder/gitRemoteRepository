参考文章：https://blog.csdn.net/CHINACR07/article/details/78817449
            （https://blog.csdn.net/Dustin_CDS/article/details/79683141）           
MySQL的默认事务隔离级别是：Repeatable Read


（1）read uncommited：是最低的事务隔离级别，它允许另外    
一个事务可以看到这个事务未提交的数据。           ————会发生脏读。

（2）read commited：保证一个事物提交后才能被另外一个
事务读取。另外一个事务不能读取该事物未提交的数据。————消除脏读

（3）repeatable read：这种事务隔离级别可以防止脏读，不
可重复读。但是可能会出现幻象读。它除了保证一个事
务不能被另外一个事务读取未提交的数据之外还避免了
以下情况产生（不可重复读）。                            ————消除不可重复读

（4）serializable：这是花费最高代价但最可靠的事务隔离
级别。事务被处理为顺序执行。除了防止脏读，不可重复读
之外，还避免了幻象读。                                 ————消除幻读

5）脏读、不可重复读、幻象读概念说明：
a.脏读：指当一个事务正字访问数据，并且对数据进行了修改，而这种数据还没有提交到数据
库中，这时，另外一个事务也访问这个数据，然后使用了这个数据。因为这个数据还没有提交那
么另外一个事务读取到的这个数据我们称之为脏数据。依据脏数据所做的操作肯能是不正确的。

b.不可重复读：指在一个事务内，多次读同一数据。在这个事务还没有执行结束，另外一个事务也
访问该同一数据，那么在第一个事务中的两次读取数据之间，由于第二个事务的修改第一个事务
两次读到的数据可能是不一样的，这样就发生了在一个事物内两次连续读到的数据是不一样的，这
种情况被称为是不可重复读。

c.幻象读：一个事务先后读取一个范围的记录，但两次读取的纪录数不同，我们称之为幻象读（两次执
行同一条 select 语句会出现不同的结果，第二次读会增加一数据行，并没有说这两次执行是在
同一个事务中）

使用方法
基于@Transactional() 
  在spring-application.xml中配置事务管理器
<!-- 事务管理器 -->
	<bean id="myTracnsactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 启用事务注解 -->
	<tx:annotation-driven transaction-manager="myTracnsactionManager"/
